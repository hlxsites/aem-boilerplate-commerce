/*! Copyright 2025 Adobe
All Rights Reserved. */
import{jsx as e,jsxs as i}from"@dropins/tools/preact-jsx-runtime.js";import{useState as g,useEffect as h}from"@dropins/tools/preact-compat.js";import{classes as d,VComponent as u,getGlobalLocale as p}from"@dropins/tools/lib.js";/* empty css                  */import{useText as f}from"@dropins/tools/i18n.js";import{events as _}from"@dropins/tools/event-bus.js";const y=({className:s,comments:m,...o})=>{const n=f({emptyState:"NegotiableQuote.Manage.quoteComments.emptyState",by:"NegotiableQuote.Manage.quoteComments.by"});return!m||m.length===0?e("ul",{...o,className:d(["quote-management-quote-comments-list","quote-management-quote-comments-list--empty",s]),"data-testid":"quote-comments-list",children:e("li",{className:"quote-management-quote-comments-list__empty-state","data-testid":"quote-comments-empty-state",children:n.emptyState})}):e("ul",{...o,className:d(["quote-management-quote-comments-list",s]),"data-testid":"quote-comments-list",children:m.map(t=>i("li",{className:"quote-management-quote-comments-list__item","data-testid":`quote-comment-${t.uid}`,children:[i("div",{className:"quote-management-quote-comments-list__header",children:[e(u,{className:"quote-management-quote-comments-list__date",node:t.createdAt,"data-testid":`quote-comment-date-${t.uid}`}),e("span",{className:"quote-management-quote-comments-list__by",children:n.by}),e(u,{className:"quote-management-quote-comments-list__author",node:t.author,"data-testid":`quote-comment-author-${t.uid}`})]}),e(u,{className:"quote-management-quote-comments-list__text",node:t.text,"data-testid":`quote-comment-text-${t.uid}`})]},t.uid))})},$=({quoteData:s,...m})=>{var r;const[o,n]=g(s);if(h(()=>{const a=_.on("quote-management/quote-data",q=>{n(q.quote)},{eager:!0});return()=>a==null?void 0:a.off()},[]),!o)return null;const t=p()||"en-US",l=new Intl.DateTimeFormat(t,{year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit",second:"2-digit",hour12:!0}),c=(r=o==null?void 0:o.comments)==null?void 0:r.map(a=>({uid:a.uid,createdAt:e("span",{children:l.format(new Date(a.createdAt))}),author:i("span",{children:[a.author.firstname," ",a.author.lastname]}),text:e("p",{children:a.text})}));return e(y,{"data-testid":"quote-comments-list-container",...m,comments:c||[]})};export{$ as Q};
//# sourceMappingURL=QuoteCommentsList.js.map
