"use strict";(self.webpackChunk_dropins_storefront_quote_management=self.webpackChunk_dropins_storefront_quote_management||[]).push([[2747,3748],{"./node_modules/@adobe-commerce/elsie/src/icons/Minus.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _path,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/preact/compat/dist/compat.module.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const __WEBPACK_DEFAULT_EXPORT__=function SvgMinus(props){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({width:24,height:24,viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},props),_path||(_path=react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{d:"M17.3332 11.75H6.6665",strokeWidth:1.5,strokeLinecap:"square",strokeLinejoin:"round",vectorEffect:"non-scaling-stroke",fill:"none",stroke:"currentColor"})))}},"./src/containers/ItemsQuoted/ItemsQuoted.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ItemsQuoted:()=>ItemsQuoted,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _index_ts__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/containers/ItemsQuoted/ItemsQuoted.tsx"),_data_models_fixtures_negotiableQuoteModel_ts__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/data/models/__fixtures__/negotiableQuoteModel.ts"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Containers/ItemsQuoted",component:_index_ts__WEBPACK_IMPORTED_MODULE_0__.t,tags:["autodocs"],parameters:{layout:"fullscreen",docs:{description:{component:"The ItemsQuoted container is used to display a table of items and a prices summary.\nIt listens for the 'quote-management/quote-data' event and displays the table and prices summary, but you can also provide the initial data via the quoteData prop."}}},argTypes:{quoteData:{control:!1,description:"The initial data to display in the ItemsQuoted.",table:{type:{summary:"NegotiableQuoteModel"}}},onItemCheckboxChange:{description:"Callback function to handle when the item checkbox is changed.",table:{type:{summary:"function",detail:'(item: NegotiableQuoteModel["items"][number], isSelected: boolean) => void'}}},onItemDropdownChange:{description:"Callback function to handle when the item dropdown value is changed.",table:{type:{summary:"function",detail:'(item: NegotiableQuoteModel["items"][number], action: string) => void'}}},onUpdate:{description:"Callback function to handle when the update button is clicked and the form is submitted.",table:{type:{summary:"function",detail:"(e: SubmitEvent) => void"}}},ProductListTable:{control:!1,description:"The table to display in the ItemsQuoted.",table:{subcategory:"slots",type:{detail:'{ items: NegotiableQuoteModel["items"], canEdit: boolean, onItemCheckboxChange: (item: NegotiableQuoteModel["items"][number], isSelected: boolean) => void, onItemDropdownChange: (item: NegotiableQuoteModel["items"][number], action: string) => void, onUpdate: (e: SubmitEvent) => void }',summary:"function"}}},QuotePricesSummary:{control:!1,description:"The prices summary to display in the ItemsQuoted.",table:{subcategory:"slots",type:{detail:'{ items: NegotiableQuoteModel["items"], prices: NegotiableQuoteModel["prices"] }',summary:"function"}}}}};var ItemsQuoted={args:{quoteData:_data_models_fixtures_negotiableQuoteModel_ts__WEBPACK_IMPORTED_MODULE_1__.E3,onItemCheckboxChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.XI)("onItemCheckboxChange"),onItemDropdownChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.XI)("onItemDropdownChange")}};const __namedExportsOrder=["ItemsQuoted"];ItemsQuoted.parameters={...ItemsQuoted.parameters,docs:{...ItemsQuoted.parameters?.docs,source:{originalSource:"{\n  args: {\n    quoteData: mockQuoteData,\n    onItemCheckboxChange: action('onItemCheckboxChange'),\n    onItemDropdownChange: action('onItemDropdownChange')\n  }\n}",...ItemsQuoted.parameters?.docs?.source},description:{story:"Example:\n\n```tsx\n<ItemsQuoted\n  quoteData={mockQuoteData}\n  onItemCheckboxChange={(item, isSelected) => {\n    console.log(item, isSelected);\n  }}\n  onItemDropdownChange={(item, action) => {\n    console.log(item, action);\n  }}\n  onUpdate={(e) => {\n    console.log(e);\n  }}\n/>\n```",...ItemsQuoted.parameters?.docs?.description}}}}}]);