/*! Copyright 2025 Adobe
All Rights Reserved. */
import{jsx as r}from"@dropins/tools/preact-jsx-runtime.js";import{useState as O,useEffect as v,useRef as y}from"@dropins/tools/preact-compat.js";import{events as P}from"@dropins/tools/event-bus.js";import{s as A,p as U}from"../chunks/signals.js";import{P as l}from"../chunks/location.js";import{useText as D}from"@dropins/tools/i18n.js";import"../chunks/state.js";import"@dropins/tools/signals.js";const C="en_US";function I(){const[t,e]=O(P.lastPayload("locale")||C);return v(()=>{const a=P.on("locale",e);return()=>a==null?void 0:a.off()},[t]),t}const c="payment-services_apple-pay-container";function M(t){const e=U.value;switch(t){case l.CHECKOUT:return console.log("I am in Checkout"),e==null?void 0:e.checkout;case l.PRODUCT_DETAIL:return console.log("I am in Product Detail"),e==null?void 0:e.productDetail;default:throw new Error(`Unsupported location: ${t}`)}}const j=({location:t,getCartId:e,createCart:a,onButtonClick:p,onSuccess:u,onError:f,...m})=>{t||(console.warn("No location provided for Apple Pay button. Please add a location. Defaulting to CHECKOUT."),t=l.CHECKOUT);const o=M(t),d=y(null),s=y(null),h=I(),{methodNotAvailableMessage:_,methodNotLoadedMessage:w,methodLoadingMessage:E}=D({methodNotAvailableMessage:"PaymentServices.messages.methodNotAvailable",methodNotLoadedMessage:"PaymentServices.messages.methodNotLoaded",methodLoadingMessage:"PaymentServices.messages.methodLoading"});if(!e&&!a||e&&a)throw new Error("Either getCartId or createCart must be provided and not both.");return v(()=>{let i=null;if(!(o!=null&&o.Payment.ApplePay.isAvailable())||!s.current)return;const g=`apple-pay-${Math.random().toString(36).slice(2,11)}`;s.current.id=g;const T=async()=>{if(e)return e();const n=a.getCartItems();if(!n)throw new Error("No items found to be added to the cart.");return i=o._Utils.addProductsToNewCart(S(n)),(await i).cartId},b=()=>{i!==null&&i.then(async({cartId:n})=>{await o._Utils.setCartAsInactive(n)}).catch(console.error)},N={getCartId:T,useApplePayShippingAddress:t===l.PRODUCT_DETAIL,useApplePayBillingAddress:t===l.PRODUCT_DETAIL,onSuccess:u,onError:f,buttonLanguage:{locale:L(h)},container:`#${g}`,onButtonClick:p,onCancel:b};return o.Payment.ApplePay.render(N).then(n=>{d.current=n}).catch(n=>{console.error("Apple Pay render failed:",n)}),()=>{d.current&&d.current.teardown()}},[o,t,e,u,f,p,h]),o&&!o.Payment.ApplePay.isAvailable()?r("div",{ref:s,class:c,children:r("div",{class:"apple-pay-error",children:_})}):A.value==="error"?r("div",{ref:s,class:c,children:r("div",{class:"apple-pay-error",children:w})}):A.value==="initializing"?r("div",{ref:s,class:c,...m,children:r("div",{class:"apple-pay-loading",children:E})}):r("div",{ref:s,class:c,...m})};function S(t){return t.map(e=>({sku:e.sku,quantity:e.quantity,parent_sku:e.parentSku,selected_options:e.selectedOptions,entered_options:e.enteredOptions}))}function L(t){const e=t.split("_");if(e.length<2){const a=L(C);return console.warn(`Cannot map elsie locale "${t}" to apple pay button locale. Falling back to "${a}".`),a}return`${e[0]}-${e[1]}`}export{j as ApplePay,j as default};
//# sourceMappingURL=ApplePay.js.map
