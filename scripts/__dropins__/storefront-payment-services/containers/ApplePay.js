/*! Copyright 2025 Adobe
All Rights Reserved. */
import{jsx as n}from"@dropins/tools/preact-jsx-runtime.js";import{useState as C,useEffect as L,useRef as h}from"@dropins/tools/preact-compat.js";import{events as v}from"@dropins/tools/event-bus.js";import{p as $,s as A}from"../chunks/signals.js";import{useText as E}from"@dropins/tools/i18n.js";import"../chunks/state.js";import"@dropins/tools/signals.js";const P="en_US";function T(){const[e,a]=C(v.lastPayload("locale")||P);return L(()=>{const t=v.on("locale",a);return()=>t==null?void 0:t.off()},[e]),e}const o="payment-services_apple-pay-container",K=({getCartId:e,isVirtualCart:a,location:t,onButtonClick:c,onSuccess:p,onError:d,...u})=>{const{checkout:r}=$.value,l=h(null),s=h(null),m=T(),{methodNotAvailableMessage:N,methodNotLoadedMessage:b,methodLoadingMessage:M}=E({methodNotAvailableMessage:"PaymentServices.messages.methodNotAvailable",methodNotLoadedMessage:"PaymentServices.messages.methodNotLoaded",methodLoadingMessage:"PaymentServices.messages.methodLoading"});return L(()=>{if(!(r!=null&&r.Payment.ApplePay.isAvailable())||!s.current)return;let f=!0,y=!0;t==="CHECKOUT"&&(f=!1,y=!1);const g=`apple-pay-${Math.random().toString(36).slice(2,11)}`;s.current.id=g;const _={getCartId:e,onSuccess:p,onError:d,useApplePayShippingAddress:f,useApplePayBillingAddress:y,buttonLanguage:{locale:S(m)},container:`#${g}`,isVirtualCart:async()=>a,onButtonClick:c};return r.Payment.ApplePay.render(_).then(i=>{l.current=i}).catch(i=>{console.error("Apple Pay render failed:",i)}),()=>{l.current&&l.current.teardown()}},[r,e,p,d,a,c,m]),r&&!r.Payment.ApplePay.isAvailable()?n("div",{ref:s,class:o,children:n("div",{class:"apple-pay-error",children:N})}):A.value==="error"?n("div",{ref:s,class:o,children:n("div",{class:"apple-pay-error",children:b})}):A.value==="initializing"?n("div",{ref:s,class:o,...u,children:n("div",{class:"apple-pay-loading",children:M})}):n("div",{ref:s,class:o,...u})};function S(e){const a=e.split("_");if(a.length<2){const t=S(P);return console.warn(`Cannot map elsie locale "${e}" to apple pay button locale. Falling back to "${t}".`),t}return`${a[0]}-${a[1]}`}export{K as ApplePay,K as default};
//# sourceMappingURL=ApplePay.js.map
